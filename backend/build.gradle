plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.8"
    id("io.micronaut.aot") version "4.3.8"
}

version = "0.1"
group = "ai.torch"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation "org.apache.poi:poi-ooxml:5.2.5"
    implementation "org.apache.logging.log4j:log4j-api:2.23.1"
    implementation "org.apache.logging.log4j:log4j-core:2.23.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.1"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:2.17.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1"
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass = "ai.torch.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileJava {
        options.encoding = "UTF-8"
    }
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ai.torch.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}



